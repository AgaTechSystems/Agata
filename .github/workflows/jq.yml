name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build-and-update-info:
    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v3

    # Installing jq to process JSON files
    - name: Install jq
      run: sudo apt-get install jq

    # Substituting the CMC API key in the info.json
    - name: Insert CMC API Key into info.json
      env:
        CMC_API_KEY: ${{ secrets.CMC_API_KEY }}
      run: |
        jq '(.data["28592"].cmc_api_endpoint, 
            .data["28592"].other_fields_if_necessary) |= sub("YOUR_CMC_API_KEY"; env.CMC_API_KEY)' info.json > info.tmp.json && mv info.tmp.json info.json

    # Substituting the BscScan API key in the info.json, only if the CMC key is missing or as an additional data point
    - name: Insert BscScan API Key into info.json
      env:
        BSCSCAN_API_KEY: ${{ secrets.BSCSCAN_API_KEY }}
      run: |
        jq '(.api_endpoints.token_holder_list, 
            .api_endpoints.contract_creation, 
            .api_endpoints.source_code) |= sub("YOUR_BSCSCAN_API_KEY"; env.BSCSCAN_API_KEY)' info.json > info.tmp.json && mv info.tmp.json info.json

    # Proceed with the build and deployment with the updated info.json
    # - name: Build and deploy
    #   run: |
    #     Deploy your application with the updated info.json
                - name: Setup Node.js environment
  uses: actions/setup-node@v4.0.1
  with:
    # Set always-auth in npmrc.
    always-auth: # optional, default is false
    # Version Spec of the version to use. Examples: 12.x, 10.15.1, >=10.15.0.
    node-version: # optional
    # File containing the version Spec of the version to use.  Examples: package.json, .nvmrc, .node-version, .tool-versions.
    node-version-file: # optional
    # Target architecture for Node to use. Examples: x86, x64. Will use system architecture by default.
    architecture: # optional
    # Set this option if you want the action to check for the latest available version that satisfies the version spec.
    check-latest: # optional
    # Optional registry to set up for auth. Will set the registry in a project level .npmrc and .yarnrc file, and set up auth to read in from env.NODE_AUTH_TOKEN.
    registry-url: # optional
    # Optional scope for authenticating against scoped registries. Will fall back to the repository owner when using the GitHub Packages registry (https://npm.pkg.github.com/).
    scope: # optional
    # Used to pull node distributions from node-versions. Since there's a default, this is typically not supplied by the user. When running this action on github.com, the default value is sufficient. When running on GHES, you can pass a personal access token for github.com if you are experiencing rate limiting.
    token: # optional, default is ${{ github.server_url == 'https://github.com' && github.token || '' }}
    # Used to specify a package manager for caching in the default directory. Supported values: npm, yarn, pnpm.
    cache: # optional
    # Used to specify the path to a dependency file: package-lock.json, yarn.lock, etc. Supports wildcards or a list of file names for caching multiple dependencies.
    cache-dependency-path: # optional
          
